{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "username": {
            "type": "string",
            "defaultValue": "ascadmin",
            "metadata": {
                "description": "Provide administrative user account for resources"
            }
        },
        "password": {
            "type": "securestring",
            "metadata": {
                "description": "Provide password for resources"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ]
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "Purpose": "LevelUp Learning",
                "ProvisionedBy": "ARM-Template"
            }
        }
    },
    "variables": {
        "workspaceName": "[toLower(concat('asclab-la-',uniqueString(subscription().subscriptionId)))]",
        "workspaceSKU": "PerGB2018",
        "vmNameLinux": "asclab-linux",
        "vmSize": "Standard_B1ms",
        "availabilitySetName": "asclab-as",
        "vNetName": "asclab-vnet",
        "vNetAddressPrefix": "192.168.0.0/16",
        "subnetName": "default",
        "subnetAddressPrefix": "192.168.0.0/24",
        "vNetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
        "subnetRef": "[concat(variables('vNetId'),'/subnets/', variables('subnetName'))]",
        "nsgName": "asclab-nsg",
        "linuxOffer": "UbuntuServer",
        "linuxSku": "18.04-LTS",
        "linuxPublisher": "Canonical",
        "linuxMgmtType": "OmsAgentForLinux",
        "linuxMgmtVersion": "1.4",
        "workspaceSolutions": {
            "Security": {
                "name": "SecurityCenterFree",
                "solutionName": "[concat('SecurityCenterFree', '(', variables('workspaceName'), ')')]",
                "publisher": "Microsoft"
            }
        },
        "storageName": "[toLower(concat('asclabsa', uniqueString(subscription().subscriptionId, resourceGroup().id, deployment().name)))]",
        "kvName": "[toLower(concat('asclabs-kv-', uniqueString(subscription().subscriptionId, resourceGroup().id, deployment().name)))]",
        "containerRegistryName": "[toLower(concat('asclabcr', uniqueString(subscription().subscriptionId, resourceGroup().id, deployment().name)))]",
        "aksClusterName": "[toLower(concat('asclabs-aks-', uniqueString(subscription().subscriptionId, resourceGroup().id, deployment().name)))]",
        "aksVersion": "1.31.2",
        "aksDNSPrefix": "asclab-aks",
        "aksNetworkPlugin": "kubenet"
    },
    "resources": [
        {
            "apiVersion": "2015-11-01-preview",
            "location": "[resourceGroup().location]",
            "name": "[variables('workspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "properties": {
                "sku": {
                    "name": "[variables('workspaceSKU')]"
                }
            },
            "resources": [

                {
                    "apiVersion": "2015-11-01-preview",
                    "type": "datasources",
                    "name": "Syslog",
                    "dependsOn": [
                        "[variables('workspaceName')]"
                    ],
                    "kind": "LinuxSyslog",
                    "properties": {
                        "syslogName": "syslog",
                        "syslogSeverities": [
                            {
                                "severity": "emerg"
                            },
                            {
                                "severity": "alert"
                            },
                            {
                                "severity": "crit"
                            },
                            {
                                "severity": "err"
                            },
                            {
                                "severity": "warning"
                            }
                        ]
                    }
                },
                {
                    "apiVersion": "2015-11-01-preview",
                    "type": "dataSources",
                    "name": "SyslogCollection",
                    "dependsOn": [
                        "[variables('workspaceName')]"
                    ],
                    "kind": "LinuxSyslogCollection",
                    "properties": {
                        "state": "Enabled"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-03-01",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowRDP",
                        "properties": {
                            "access": "Allow",
                            "description": "Inbound RDP rule",
                            "direction": "Inbound",
                            "destinationAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": 3389,
                            "sourcePortRange": "*",
                            "priority": 500,
                            "sourceAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "AllowSSH",
                        "properties": {
                            "access": "Allow",
                            "description": "Inbound SSH rule",
                            "direction": "Inbound",
                            "destinationAddressPrefix": "*",
                            "protocol": "Tcp",
                            "destinationPortRange": 22,
                            "sourcePortRange": "*",
                            "priority": 501,
                            "sourceAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('vmNameLinux'), '-pip')]",
            "location": "[resourceGroup().location]",
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('vmNameLinux'), uniqueString(subscription().subscriptionId)))]"
                }
            }
        },
        {
            "apiVersion": "2018-08-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vNetName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ],
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('vmNameLinux'), '-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('vmNameLinux'), '-pip')]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vNetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmNameLinux'), '-pip'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2018-10-01",
            "name": "[variables('availabilitySetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 3
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmNameLinux'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkinterfaces/', variables('vmNameLinux'), '-nic')]",
                "[resourceId('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ],
            "tags": "[parameters('resourceTags')]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
                },
                "hardwareprofile": {
                    "vmsize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmNameLinux'))]",
                    "adminusername": "[parameters('username')]",
                    "adminpassword": "[parameters('password')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('linuxPublisher')]",
                        "offer": "[variables('linuxOffer')]",
                        "version": "latest",
                        "sku": "[variables('linuxSku')]"
                    },
                    "osdisk": {
                        "name": "[concat(variables('vmNameLinux'), '-osdisk')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "caching": "ReadWrite"
                    }
                },
                "networkprofile": {
                    "networkinterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkinterfaces', concat(variables('vmNameLinux'),'-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('workspaceSolutions').Security.solutionName]",
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('workspaceName')]"
            ],
            "plan": {
                "name": "[variables('workspaceSolutions').Security.solutionName]",
                "product": "[concat('OMSGallery/', variables('workspaceSolutions').Security.name)]",
                "publisher": "[variables('workspaceSolutions').Security.publisher]",
                "promotionCode": ""
            },
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
            }
        },
        {
            "name": "[variables('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-06-01",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "dependsOn": [],
            "tags": "[parameters('resourceTags')]",
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": false
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('kvName')]",
            "apiVersion": "2016-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantid]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantid]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "get"
                            ],
                            "certificates": []
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false
            },

            "tags": "[parameters('resourceTags')]"
        },
        {
            "apiVersion": "2020-03-01",
            "dependsOn": [],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[resourceGroup().location]",
            "name": "[variables('aksClusterName')]",
            "properties": {
                "kubernetesVersion": "[variables('aksVersion')]",
                "dnsPrefix": "[variables('aksDNSPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": 1,
                        "vmSize": "Standard_B2s",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "AvailabilitySet",
                        "mode": "System"
                    }
                ],
                "nodeResourceGroup": "[variables('aksClusterName')]",
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "[variables('aksNetworkPlugin')]"
                }
            },
            "tags": "[parameters('resourceTags')]",
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "name": "[variables('containerRegistryName')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2019-05-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "adminUserEnabled": true
            }
        }
    ],
    "outputs": {
        "log analytics workspace": {
            "type": "string",
            "value": "[variables('workspaceName')]"
        },
        "virtual network": {
            "type": "string",
            "value": "[variables('vNetName')]"
        },
        "subnet": {
            "type": "string",
            "value": "[variables('subnetName')]"
        },
        "network security group": {
            "type": "string",
            "value": "[variables('nsgName')]"
        },
        "linux virtual machine": {
            "type": "string",
            "value": "[variables('vmNameLinux')]"
        },
        "key vault": {
            "type": "string",
            "value": "[variables('kvName')]"
        },
        "container registry": {
            "type": "string",
            "value": "[variables('containerRegistryName')]"
        }
    }
}
